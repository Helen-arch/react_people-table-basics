{"version":3,"sources":["components/Navbar/Navbar.tsx","App.tsx","pages/HomePage.tsx","pages/NotFoundPage.tsx","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","api.ts","pages/PeoplePage.tsx","Root.tsx","index.tsx"],"names":["getLinkClass","isActive","classNames","Navbar","className","role","to","App","HomePage","NotFoundPage","Loader","PersonLink","name","slug","sex","href","PeopleTable","people","useParams","map","person","born","died","motherName","fatherName","mother","find","parent","father","mum","dad","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useState","setPeople","isError","setIsError","loading","setLoading","loadPeople","useEffect","length","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.0edd193b.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nconst getLinkClass = ({ isActive }: { isActive: boolean }) => (\n  classNames('navbar-item', {\n    'has-background-grey-lighter': isActive,\n  })\n);\n\nexport const Navbar = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink to=\"/\" className={getLinkClass}>\n          Home\n        </NavLink>\n        <NavLink to=\"/people\" className={getLinkClass}>\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","import { Outlet } from 'react-router-dom';\n\nimport './App.scss';\nimport { Navbar } from './components/Navbar/Navbar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <Outlet />\n  </div>\n);\n","export const HomePage = () => (\n  <main className=\"section\">\n    <div className=\"container\">\n      <h1 className=\"title\">Home Page</h1>\n    </div>\n  </main>\n);\n","export const NotFoundPage = () => {\n  return (\n    <main className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Page not found</h1>\n      </div>\n    </main>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\n\ntype Props = {\n  name: string | null;\n  slug: string;\n  sex: string;\n};\n\nexport const PersonLink: React.FC<Props> = ({ name, slug, sex }) => {\n  return (\n    <a\n      href={`#/people/${slug}`}\n      className={classNames({\n        'has-text-danger': sex === 'f',\n      })}\n    >\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types/Person';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { slug } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const {\n            name,\n            sex,\n            born,\n            died,\n            motherName,\n            fatherName,\n          } = person;\n\n          const mother = people.find(parent => parent.name === motherName);\n          const father = people.find(parent => parent.name === fatherName);\n\n          const mum = mother\n            ? (\n              <PersonLink\n                name={motherName}\n                sex={mother.sex}\n                slug={mother.slug}\n              />\n            )\n            : motherName;\n\n          const dad = father\n            ? (\n              <PersonLink\n                name={fatherName}\n                sex={father.sex}\n                slug={father.slug}\n              />\n            )\n            : fatherName;\n\n          return (\n            <tr\n              key={person.slug}\n              data-cy=\"person\"\n              className={classNames({\n                'has-background-warning': slug === person.slug,\n              })}\n            >\n              <td>\n                <PersonLink\n                  name={name}\n                  sex={sex}\n                  slug={person.slug}\n                />\n              </td>\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n\n              <td>\n                {motherName\n                  ? mum\n                  : '-'}\n              </td>\n\n              <td>\n                {fatherName\n                  ? dad\n                  : '-'}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useEffect, useState } from 'react';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable/PeopleTable';\nimport { Person } from '../types/Person';\nimport { getPeople } from '../api';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isError, setIsError] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const loadPeople = async () => {\n    setLoading(true);\n\n    try {\n      const response = await getPeople();\n\n      setPeople(response);\n      setLoading(false);\n    } catch {\n      setIsError(true);\n    }\n  };\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  return (\n    <main className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">People Page</h1>\n\n        <div className=\"block\">\n          <div className=\"box table-container\">\n            {loading\n              ? <Loader />\n              : <PeopleTable people={people} />}\n\n            {isError && (\n              <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                Something went wrong\n              </p>\n            )}\n\n            {!people.length && !loading && (\n              <p data-cy=\"noPeopleMessage\">\n                There are no people on the server\n              </p>\n            )}\n\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n","import {\n  Navigate,\n  Route,\n  HashRouter as Router,\n  Routes,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { PeoplePage } from './pages/PeoplePage';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"people\">\n          <Route index element={<PeoplePage />} />\n          <Route path=\":slug\" element={<PeoplePage />} />\n        </Route>\n\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}